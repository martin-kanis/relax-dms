package org.fit.vutbr.relaxdms;

import java.util.List;
import org.fit.vutbr.relaxdms.data.db.dao.model.workflow.Flag;
import org.fit.vutbr.relaxdms.data.db.dao.model.Document;
import org.fit.vutbr.relaxdms.data.db.dao.model.workflow.Workflow;
import org.fit.vutbr.relaxdms.data.db.dao.model.workflow.State;
import org.fit.vutbr.relaxdms.data.db.dao.model.workflow.ApprovalEnum;
import org.fit.vutbr.relaxdms.data.db.dao.model.workflow.StateEnum;
import org.fit.vutbr.relaxdms.data.db.dao.model.workflow.LabelEnum;
import org.fit.vutbr.relaxdms.data.db.dao.model.workflow.Label;

global java.util.Set docSet;

dialect "java"

rule "Submit"
    when
        $document : Document(workflow.state.currentState == StateEnum.SUBMITED &&
            workflow.assignment.assignee != "user")
    then
        modify($document) {
            getWorkflow().getAssignment().setAssignee("user")
        };
        System.out.println("Submit rule fired");
end

rule "Approve"
    when
        $document : Document(workflow.state.approval == ApprovalEnum.APPROVED &&
            workflow.state.currentState == StateEnum.SUBMITED)
    then
        List<String> assigneeList = $document.getWorkflow().getAssignment().getHistory();
        int size = assigneeList.size();
        int index = (size == 1) ? size - 1 : size - 2;
        String assignee = assigneeList.get(index);

        modify($document) {
            getWorkflow().getAssignment().setAssignee(assignee),
            getWorkflow().getState().setCurrentState(StateEnum.DONE)
        };
        System.out.println("Approve rule fired");
end

rule "Decline"
    when
        $document : Document(workflow.state.approval == ApprovalEnum.DECLINED &&
            workflow.state.currentState == StateEnum.SUBMITED)
    then
        List<String> assigneeList = $document.getWorkflow().getAssignment().getHistory();
        int size = assigneeList.size();
        int index = (size == 1) ? size - 1 : size - 2;
        String assignee = assigneeList.get(index);

        modify($document) {
            getWorkflow().getAssignment().setAssignee(assignee),
            getWorkflow().getState().setCurrentState(StateEnum.OPEN)
        };
        System.out.println("Decline rule fired");
end

rule "Sign"
    when 
        $document : Document(workflow.state.approval == ApprovalEnum.APPROVED &&
            workflow.assignment.assignee != "manager" && 
            !workflow.labels.contains(new Label(LabelEnum.SIGNED)))
    then
        modify($document) {
            getWorkflow().getAssignment().setAssignee("manager")
        };
        docSet.add($document);
        System.out.println("Sign rule fired");
end

rule "Unfreeze"
    when 
        Flag(isTrue() == true)
        $document : Document(workflow.labels.contains(new Label(LabelEnum.FREEZED)))
    then      
        modify($document) {
            getWorkflow().getLabels().remove(new Label(LabelEnum.FREEZED))
        };
        docSet.add($document);
        System.out.println("Unfreeze rule fired");
end

query "Document"
    $result: Document()
end